buildscript {
    ext {
        android_gradle_plugin_version = '4.1.2'
        kotlin_version = "1.5.10" // compose 1.0.0-beta06 <--> kotlin 1.4.32 ,compose 1.0.0-beta07/8 <--> kotlin 1.5.10
        kotlinx_serialization_version = "1.2.1"
        kotlinx_serialization_runtime_version = "1.0-M1-1.4.0-rc"
        coroutines_common_version = "1.4.3"
        coroutines_version = "1.4.3-native-mt"
        ktor_version = "1.5.3"

        hilt_version = "2.35.1"
        koin_version = "2.2.2" 
        
        compose_version = '1.0.0-beta08' 
        compose_activity_version = '1.3.0-beta01'
        compose_appcompat_version = '1.3.0'
        compose_constraintlayout_version = '1.0.0-alpha07'
        compose_navigation_version = '2.4.0-alpha02'
        compose_lifecycle_version = '1.0.0-alpha06'
        compose_accompanist_version = "0.11.1"
        compose_utils_chrisbanes_coil_version = "0.6.2"
        compose_utils_coil_version = "1.2.2"
        paging_compose_version = "1.0.0-alpha10"

        retrofit_version = "2.9.0"
        retrofit_kotlinx_serialization_converter_version = "0.8.0"
        okhttp3_version = "5.0.0-alpha.2"

        jb_compose_version = '0.4.0-build184'
    }
    repositories {
        google()
        mavenCentral()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap/' }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$android_gradle_plugin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        //dagger hilt
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        //JB_Compose
//        classpath "org.jetbrains.compose:compose-gradle-plugin:$jb_compose_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}


plugins {
    id 'com.github.ben-manes.versions' version '0.38.0'
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap/' }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8.toString()
            freeCompilerArgs += ["-Xskip-prerelease-check", "-progressive"]
            freeCompilerArgs += "-Xopt-in=kotlin.Experimental"
            freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
            useIR = true
            allWarningsAsErrors = false
        }
    }
}

//subprojects {
//    apply(from = rootProject.file("ktlint.gradle.kts"))
//    afterEvaluate {
//        tasks.withType(KotlinCompile::class).all {
//            kotlinOptions {
//                jvmTarget = JavaVersion.VERSION_1_8.toString()
//                allWarningsAsErrors = true
//                useIR = true
//                freeCompilerArgs = listOf(*freeCompilerArgs.toTypedArray(), "-Xopt-in=kotlin.RequiresOptIn")
//            }
//        }
//    }
//}
//
//tasks.named<DependencyUpdatesTask>("dependencyUpdates").configure {
//    checkForGradleUpdate = true
//    gradleReleaseChannel = GradleReleaseChannel.RELEASE_CANDIDATE.id
//    revision = "integration"
//    outputFormatter = "plain"
//    outputDir = "build/dependencyUpdates"
//    reportfileName = "dependency_update_report"
//}
//
//tasks.withType<Test>().configureEach {
//    reports.html.isEnabled = false
//    reports.junitXml.isEnabled = true
//    maxParallelForks = Runtime.getRuntime().availableProcessors()
//}
//
//// Change gradleVersion and run gradlew wrapper to properly update gradle wrapper
//tasks.named<Wrapper>("wrapper") {
//    distributionType = Wrapper.DistributionType.BIN
//    gradleVersion = "4.1.2"
//}


task clean(type: Delete) {
    delete rootProject.buildDir
}
